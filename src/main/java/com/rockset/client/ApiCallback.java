/*
 * REST API
 * Rockset's REST API allows for creating and managing all resources in Rockset. Each supported endpoint is documented below.  All requests must be authorized with a Rockset API key, which can be created in the [Rockset console](https://console.rockset.com). The API key must be provided as `ApiKey <api_key>` in the `Authorization` request header. For example: ``` Authorization: ApiKey aB35kDjg93J5nsf4GjwMeErAVd832F7ad4vhsW1S02kfZiab42sTsfW5Sxt25asT ```  All endpoints are only accessible via https.  Build something awesome!
 *
 * OpenAPI spec version: v1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.rockset.client;


import java.util.List;
import java.util.Map;

/**
 * Callback for asynchronous API call.
 *
 * @param <T> The return type
 */
public interface ApiCallback<T> {
  /**
   * This is called when the API call fails.
   *
   * @param e The exception causing the failure
   * @param statusCode Status code of the response if available, otherwise it would be 0
   * @param responseHeaders Headers of the response if available, otherwise it would be null
   */
  void onFailure(Exception e, int statusCode, Map<String, List<String>> responseHeaders);

  /**
   * This is called when the API call succeeded.
   *
   * @param result The result deserialized from response
   * @param statusCode Status code of the response
   * @param responseHeaders Headers of the response
   */
  void onSuccess(T result, int statusCode, Map<String, List<String>> responseHeaders);

  /**
   * This is called when the API upload processing.
   *
   * @param bytesWritten bytes Written
   * @param contentLength content length of request body
   * @param done write end
   */
  void onUploadProgress(long bytesWritten, long contentLength, boolean done);

  /**
   * This is called when the API downlond processing.
   *
   * @param bytesRead bytes Read
   * @param contentLength content lenngth of the response
   * @param done Read end
   */
  void onDownloadProgress(long bytesRead, long contentLength, boolean done);
}
