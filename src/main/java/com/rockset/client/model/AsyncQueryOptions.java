/*
 * REST API
 * Rockset's REST API allows for creating and managing all resources in Rockset. Each supported endpoint is documented below.  All requests must be authorized with a Rockset API key, which can be created in the [Rockset console](https://console.rockset.com). The API key must be provided as `ApiKey <api_key>` in the `Authorization` request header. For example: ``` Authorization: ApiKey aB35kDjg93J5nsf4GjwMeErAVd832F7ad4vhsW1S02kfZiab42sTsfW5Sxt25asT ```  All endpoints are only accessible via https.  Build something awesome!
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rockset.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AsyncQueryOptions
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-11-22T11:16:43.952-05:00")
public class AsyncQueryOptions {
  @SerializedName("client_timeout_ms")
  private Long clientTimeoutMs = null;

  @SerializedName("timeout_ms")
  private Long timeoutMs = null;

  @SerializedName("max_initial_results")
  private Long maxInitialResults = null;

  public AsyncQueryOptions clientTimeoutMs(Long clientTimeoutMs) {
    this.clientTimeoutMs = clientTimeoutMs;
    return this;
  }

   /**
   * The maximum amount of time that the client is willing to wait for the query to complete. If the query is not complete by this timeout, a response will be returned with a &#x60;query_id&#x60; that can be used to check the status of the query and retrieve results once the query has completed.
   * @return clientTimeoutMs
  **/

@JsonProperty("client_timeout_ms")
@ApiModelProperty(value = "The maximum amount of time that the client is willing to wait for the query to complete. If the query is not complete by this timeout, a response will be returned with a `query_id` that can be used to check the status of the query and retrieve results once the query has completed.")
  public Long getClientTimeoutMs() {
    return clientTimeoutMs;
  }

  public void setClientTimeoutMs(Long clientTimeoutMs) {
    this.clientTimeoutMs = clientTimeoutMs;
  }

  public AsyncQueryOptions timeoutMs(Long timeoutMs) {
    this.timeoutMs = timeoutMs;
    return this;
  }

   /**
   * The maximum amount of time that the system will attempt to complete query execution before aborting the query and returning an error.
   * @return timeoutMs
  **/

@JsonProperty("timeout_ms")
@ApiModelProperty(value = "The maximum amount of time that the system will attempt to complete query execution before aborting the query and returning an error.")
  public Long getTimeoutMs() {
    return timeoutMs;
  }

  public void setTimeoutMs(Long timeoutMs) {
    this.timeoutMs = timeoutMs;
  }

  public AsyncQueryOptions maxInitialResults(Long maxInitialResults) {
    this.maxInitialResults = maxInitialResults;
    return this;
  }

   /**
   * The maximum number of results you will receive as a client. If the query exceeds this limit, the remaining results can be requested using a returned pagination cursor. In addition, there is a maximum response size of 100MiB so fewer than &#x60;max_results&#x60; may be returned.
   * @return maxInitialResults
  **/

@JsonProperty("max_initial_results")
@ApiModelProperty(value = "The maximum number of results you will receive as a client. If the query exceeds this limit, the remaining results can be requested using a returned pagination cursor. In addition, there is a maximum response size of 100MiB so fewer than `max_results` may be returned.")
  public Long getMaxInitialResults() {
    return maxInitialResults;
  }

  public void setMaxInitialResults(Long maxInitialResults) {
    this.maxInitialResults = maxInitialResults;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AsyncQueryOptions asyncQueryOptions = (AsyncQueryOptions) o;
    return Objects.equals(this.clientTimeoutMs, asyncQueryOptions.clientTimeoutMs) &&
        Objects.equals(this.timeoutMs, asyncQueryOptions.timeoutMs) &&
        Objects.equals(this.maxInitialResults, asyncQueryOptions.maxInitialResults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientTimeoutMs, timeoutMs, maxInitialResults);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AsyncQueryOptions {\n");
    
    sb.append("    clientTimeoutMs: ").append(toIndentedString(clientTimeoutMs)).append("\n");
    sb.append("    timeoutMs: ").append(toIndentedString(timeoutMs)).append("\n");
    sb.append("    maxInitialResults: ").append(toIndentedString(maxInitialResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

