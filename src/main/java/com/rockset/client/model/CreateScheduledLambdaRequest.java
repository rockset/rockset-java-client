/*
 * REST API
 * Rockset's REST API allows for creating and managing all resources in Rockset. Each supported endpoint is documented below.  All requests must be authorized with a Rockset API key, which can be created in the [Rockset console](https://console.rockset.com). The API key must be provided as `ApiKey <api_key>` in the `Authorization` request header. For example: ``` Authorization: ApiKey aB35kDjg93J5nsf4GjwMeErAVd832F7ad4vhsW1S02kfZiab42sTsfW5Sxt25asT ```  All endpoints are only accessible via https.  Build something awesome!
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rockset.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CreateScheduledLambdaRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-14T12:03:45.664Z")
public class CreateScheduledLambdaRequest {
  @SerializedName("apikey")
  private String apikey = null;

  @SerializedName("cron_string")
  private String cronString = null;

  @SerializedName("ql_name")
  private String qlName = null;

  @SerializedName("tag")
  private String tag = null;

  @SerializedName("total_times_to_execute")
  private Long totalTimesToExecute = null;

  @SerializedName("version")
  private String version = null;

  @SerializedName("webhook_auth_header")
  private String webhookAuthHeader = null;

  @SerializedName("webhook_payload")
  private String webhookPayload = null;

  @SerializedName("webhook_url")
  private String webhookUrl = null;

  public CreateScheduledLambdaRequest apikey(String apikey) {
    this.apikey = apikey;
    return this;
  }

   /**
   * The apikey to use when triggering execution of the associated query lambda.
   * @return apikey
  **/

@JsonProperty("apikey")
@ApiModelProperty(example = "qoiwkjndksd", value = "The apikey to use when triggering execution of the associated query lambda.")
  public String getApikey() {
    return apikey;
  }

  public void setApikey(String apikey) {
    this.apikey = apikey;
  }

  public CreateScheduledLambdaRequest cronString(String cronString) {
    this.cronString = cronString;
    return this;
  }

   /**
   * The UNIX-formatted cron string for this scheduled query lambda.
   * @return cronString
  **/

@JsonProperty("cron_string")
@ApiModelProperty(example = "* * * * *", required = true, value = "The UNIX-formatted cron string for this scheduled query lambda.")
  public String getCronString() {
    return cronString;
  }

  public void setCronString(String cronString) {
    this.cronString = cronString;
  }

  public CreateScheduledLambdaRequest qlName(String qlName) {
    this.qlName = qlName;
    return this;
  }

   /**
   * The name of the QL to use for scheduled execution.
   * @return qlName
  **/

@JsonProperty("ql_name")
@ApiModelProperty(example = "ql_name", required = true, value = "The name of the QL to use for scheduled execution.")
  public String getQlName() {
    return qlName;
  }

  public void setQlName(String qlName) {
    this.qlName = qlName;
  }

  public CreateScheduledLambdaRequest tag(String tag) {
    this.tag = tag;
    return this;
  }

   /**
   * The QL tag to use for scheduled execution.
   * @return tag
  **/

@JsonProperty("tag")
@ApiModelProperty(example = "production", value = "The QL tag to use for scheduled execution.")
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }

  public CreateScheduledLambdaRequest totalTimesToExecute(Long totalTimesToExecute) {
    this.totalTimesToExecute = totalTimesToExecute;
    return this;
  }

   /**
   * The number of times to execute this scheduled query lambda. Once this scheduled query lambda has been executed this many times, it will no longer be executed.
   * @return totalTimesToExecute
  **/

@JsonProperty("total_times_to_execute")
@ApiModelProperty(example = "1", value = "The number of times to execute this scheduled query lambda. Once this scheduled query lambda has been executed this many times, it will no longer be executed.")
  public Long getTotalTimesToExecute() {
    return totalTimesToExecute;
  }

  public void setTotalTimesToExecute(Long totalTimesToExecute) {
    this.totalTimesToExecute = totalTimesToExecute;
  }

  public CreateScheduledLambdaRequest version(String version) {
    this.version = version;
    return this;
  }

   /**
   * The version of the QL to use for scheduled execution.
   * @return version
  **/

@JsonProperty("version")
@ApiModelProperty(example = "abcdef1234", value = "The version of the QL to use for scheduled execution.")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public CreateScheduledLambdaRequest webhookAuthHeader(String webhookAuthHeader) {
    this.webhookAuthHeader = webhookAuthHeader;
    return this;
  }

   /**
   * The value to use as the authorization header when hitting the webhook.
   * @return webhookAuthHeader
  **/

@JsonProperty("webhook_auth_header")
@ApiModelProperty(example = "bearer qiowjkjkdskdskldio", value = "The value to use as the authorization header when hitting the webhook.")
  public String getWebhookAuthHeader() {
    return webhookAuthHeader;
  }

  public void setWebhookAuthHeader(String webhookAuthHeader) {
    this.webhookAuthHeader = webhookAuthHeader;
  }

  public CreateScheduledLambdaRequest webhookPayload(String webhookPayload) {
    this.webhookPayload = webhookPayload;
    return this;
  }

   /**
   * The payload that should be sent to the webhook. JSON format.
   * @return webhookPayload
  **/

@JsonProperty("webhook_payload")
@ApiModelProperty(value = "The payload that should be sent to the webhook. JSON format.")
  public String getWebhookPayload() {
    return webhookPayload;
  }

  public void setWebhookPayload(String webhookPayload) {
    this.webhookPayload = webhookPayload;
  }

  public CreateScheduledLambdaRequest webhookUrl(String webhookUrl) {
    this.webhookUrl = webhookUrl;
    return this;
  }

   /**
   * The URL of the webhook that should be triggered after this scheduled query lambda completes.
   * @return webhookUrl
  **/

@JsonProperty("webhook_url")
@ApiModelProperty(example = "https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX", value = "The URL of the webhook that should be triggered after this scheduled query lambda completes.")
  public String getWebhookUrl() {
    return webhookUrl;
  }

  public void setWebhookUrl(String webhookUrl) {
    this.webhookUrl = webhookUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateScheduledLambdaRequest createScheduledLambdaRequest = (CreateScheduledLambdaRequest) o;
    return Objects.equals(this.apikey, createScheduledLambdaRequest.apikey) &&
        Objects.equals(this.cronString, createScheduledLambdaRequest.cronString) &&
        Objects.equals(this.qlName, createScheduledLambdaRequest.qlName) &&
        Objects.equals(this.tag, createScheduledLambdaRequest.tag) &&
        Objects.equals(this.totalTimesToExecute, createScheduledLambdaRequest.totalTimesToExecute) &&
        Objects.equals(this.version, createScheduledLambdaRequest.version) &&
        Objects.equals(this.webhookAuthHeader, createScheduledLambdaRequest.webhookAuthHeader) &&
        Objects.equals(this.webhookPayload, createScheduledLambdaRequest.webhookPayload) &&
        Objects.equals(this.webhookUrl, createScheduledLambdaRequest.webhookUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apikey, cronString, qlName, tag, totalTimesToExecute, version, webhookAuthHeader, webhookPayload, webhookUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateScheduledLambdaRequest {\n");
    
    sb.append("    apikey: ").append(toIndentedString(apikey)).append("\n");
    sb.append("    cronString: ").append(toIndentedString(cronString)).append("\n");
    sb.append("    qlName: ").append(toIndentedString(qlName)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    totalTimesToExecute: ").append(toIndentedString(totalTimesToExecute)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    webhookAuthHeader: ").append(toIndentedString(webhookAuthHeader)).append("\n");
    sb.append("    webhookPayload: ").append(toIndentedString(webhookPayload)).append("\n");
    sb.append("    webhookUrl: ").append(toIndentedString(webhookUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

