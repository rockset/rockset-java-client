/*
 * REST API
 * Rockset's REST API allows for creating and managing all resources in Rockset. Each supported endpoint is documented below.  All requests must be authorized with a Rockset API key, which can be created in the [Rockset console](https://console.rockset.com). The API key must be provided as `ApiKey <api_key>` in the `Authorization` request header. For example: ``` Authorization: ApiKey aB35kDjg93J5nsf4GjwMeErAVd832F7ad4vhsW1S02kfZiab42sTsfW5Sxt25asT ```  All endpoints are only accessible via https.  Build something awesome!
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rockset.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.rockset.client.model.QueryParameter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * QueryRequestSql
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-14T12:03:45.664Z")
public class QueryRequestSql {
  @SerializedName("default_row_limit")
  private Integer defaultRowLimit = null;

  @SerializedName("initial_paginate_response_doc_count")
  private Integer initialPaginateResponseDocCount = null;

  @SerializedName("parameters")
  private List<QueryParameter> parameters = null;

  @SerializedName("query")
  private String query = null;

  public QueryRequestSql defaultRowLimit(Integer defaultRowLimit) {
    this.defaultRowLimit = defaultRowLimit;
    return this;
  }

   /**
   * Row limit to use. Limits specified in the query text will override this default.
   * @return defaultRowLimit
  **/

@JsonProperty("default_row_limit")
@ApiModelProperty(value = "Row limit to use. Limits specified in the query text will override this default.")
  public Integer getDefaultRowLimit() {
    return defaultRowLimit;
  }

  public void setDefaultRowLimit(Integer defaultRowLimit) {
    this.defaultRowLimit = defaultRowLimit;
  }

  public QueryRequestSql initialPaginateResponseDocCount(Integer initialPaginateResponseDocCount) {
    this.initialPaginateResponseDocCount = initialPaginateResponseDocCount;
    return this;
  }

   /**
   * [DEPRECATED] Use &#x60;max_initial_results&#x60; instead. Number of documents to return in addition to paginating for this query call. Only relevant if &#x60;paginate&#x60; flag is also set.
   * @return initialPaginateResponseDocCount
  **/

@JsonProperty("initial_paginate_response_doc_count")
@ApiModelProperty(value = "[DEPRECATED] Use `max_initial_results` instead. Number of documents to return in addition to paginating for this query call. Only relevant if `paginate` flag is also set.")
  public Integer getInitialPaginateResponseDocCount() {
    return initialPaginateResponseDocCount;
  }

  public void setInitialPaginateResponseDocCount(Integer initialPaginateResponseDocCount) {
    this.initialPaginateResponseDocCount = initialPaginateResponseDocCount;
  }

  public QueryRequestSql parameters(List<QueryParameter> parameters) {
    this.parameters = parameters;
    return this;
  }

  public QueryRequestSql addParametersItem(QueryParameter parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<QueryParameter>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

   /**
   * List of named parameters.
   * @return parameters
  **/

@JsonProperty("parameters")
@ApiModelProperty(value = "List of named parameters.")
  public List<QueryParameter> getParameters() {
    return parameters;
  }

  public void setParameters(List<QueryParameter> parameters) {
    this.parameters = parameters;
  }

  public QueryRequestSql query(String query) {
    this.query = query;
    return this;
  }

   /**
   * SQL query string.
   * @return query
  **/

@JsonProperty("query")
@ApiModelProperty(example = "SELECT * FROM foo where _id = :_id", required = true, value = "SQL query string.")
  public String getQuery() {
    return query;
  }

  public void setQuery(String query) {
    this.query = query;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryRequestSql queryRequestSql = (QueryRequestSql) o;
    return Objects.equals(this.defaultRowLimit, queryRequestSql.defaultRowLimit) &&
        Objects.equals(this.initialPaginateResponseDocCount, queryRequestSql.initialPaginateResponseDocCount) &&
        Objects.equals(this.parameters, queryRequestSql.parameters) &&
        Objects.equals(this.query, queryRequestSql.query);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultRowLimit, initialPaginateResponseDocCount, parameters, query);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryRequestSql {\n");
    
    sb.append("    defaultRowLimit: ").append(toIndentedString(defaultRowLimit)).append("\n");
    sb.append("    initialPaginateResponseDocCount: ").append(toIndentedString(initialPaginateResponseDocCount)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

